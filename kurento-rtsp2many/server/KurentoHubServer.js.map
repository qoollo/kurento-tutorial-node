{"version":3,"sources":["server/KurentoHubServer.ts"],"names":["KurentoHubServer","KurentoHubServer.constructor","KurentoHubServer.start","KurentoHubServer.stop","KurentoHubServer.state","KurentoHubServer.registerRpcs","KurentoHubServer.register","KurentoHubServer.connectToStream","KurentoHubServer.addMasterIfNotExists","KurentoHubServer.processAddViewer"],"mappings":"AAAA,mDAAmD;AAEnD,IAAO,MAAM,WAAW,UAAU,CAAC,CAAC;AAEpC,IAAO,kBAAkB,WAAW,sBAAsB,CAAC,CAAC;AAE5D,IAAO,cAAc,WAAW,kBAAkB,CAAC,CAAC;AAEpD,IAAO,2BAA2B,WAAW,+BAA+B,CAAC,CAAC;AAE9E,IAAO,kBAAkB,WAAW,sBAAsB,CAAC,CAAC;AAG5D,IAAO,aAAa,WAAW,iBAAiB,CAAC,CAAC;AAClD,IAAO,MAAM,WAAW,UAAU,CAAC,CAAC;AACpC,IAAO,aAAa,WAAW,iBAAiB,CAAC,CAAC;AAElD,IAAI,aAAa,GAA6C,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACxF,IAAO,oBAAoB,WAAW,wBAAwB,CAAC,CAAC;AAGhE;IAIIA;QA+CQC,kBAAaA,GAAkBA,IAAIA,aAAaA,EAAEA,CAACA;QACnDA,kBAAaA,GAAkBA,IAAIA,aAAaA,EAAEA,CAACA;QACnDA,yBAAoBA,GAAGA,IAAIA,oBAAoBA,CAACA,aAAaA,CAACA,CAACA;IAhDvEA,CAACA;IAEDD,gCAAKA,GAALA;QAAAE,iBASCA;QARGA,MAAMA,CAACA,IAAIA,cAAcA,EAAEA;aACtBA,gBAAgBA,EAAEA;aAClBA,IAAIA,CAACA,UAAAA,GAAGA,IAAIA,OAAAA,KAAIA,CAACA,iBAAiBA,GAAGA,IAAIA,2BAA2BA,CAACA,GAAGA,EAAEA,2BAA2BA,EAAEA,IAAIA,kBAAkBA,CAACA,YAAYA,EAAEA,SAASA,CAACA,EAAEA,MAAMA,CAACA,EAAnJA,CAAmJA,CAACA;aAChKA,IAAIA,CAACA,UAAAA,CAACA,IAAIA,OAAAA,CAACA,CAACA,KAAKA,EAAEA,EAATA,CAASA,CAACA;aACpBA,IAAIA,CAACA,UAAAA,CAACA,IAAIA,OAAAA,KAAIA,CAACA,YAAYA,CAACA,CAACA,CAACA,EAApBA,CAAoBA,CAACA;aAC/BA,IAAIA,CAACA,UAAAA,aAAaA;YACfA,QAAQA,CAACA;QACbA,CAACA,CAACA,CAACA;IACXA,CAACA;IAEDF,+BAAIA,GAAJA;QACIG,MAAMA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,IAAIA,EAAEA,CAACA;IACzCA,CAACA;IAEDH,sBAAWA,mCAAKA;aAAhBA;YACII,MAAMA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,KAAKA,CAACA;QACxCA,CAACA;;;OAAAJ;IAEOA,uCAAYA,GAApBA,UAAqBA,OAAyBA;QAA9CK,iBAYCA;QAXGA,IAAIA,GAAGA,GAAGA,OAAOA,CAACA,GAAGA,CAACA;YAClBA,OAAOA,CAACA,QAAQA,CAACA,kBAAkBA,CAACA,QAAQA,EAAEA,UAACA,IAAIA,EAAEA,MAAMA,IAAKA,OAAAA,KAAIA,CAACA,QAAQA,EAAEA,EAAfA,CAAeA,CAACA;YAChFA,OAAOA,CAACA,QAAQA,CAACA,kBAAkBA,CAACA,eAAeA,EAAEA,UAACA,IAAIA,EAAEA,MAAMA,IAAKA,OAAAA,KAAIA,CAACA,eAAeA,CAACA,IAAIA,CAACA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,CAACA,CAACA,EAAtCA,CAAsCA,CAACA;SACjHA,CAACA,CAACA;QACHA,GAAGA,CAACA,IAAIA,CAACA,UAAAA,aAAaA;mBAClBA,aAAaA,CAACA,OAAOA,CAACA,UAAAA,CAACA,IAAIA,OAAAA,MAAMA,CAACA,KAAKA,CAACA,mCAAmCA,GAAGA,CAACA,CAACA,SAASA,CAACA,EAA/DA,CAA+DA,CAACA;QAA3FA,CAA2FA,CAACA,CAACA;QACjGA,GAAGA,CAACA,KAAKA,CAACA,UAAAA,GAAGA;YACTA,MAAMA,CAACA,KAAKA,CAACA,2CAA2CA,EAAEA,GAAGA,CAACA,CAACA;YAC/DA,OAAOA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA;QACxBA,CAACA,CAACA,CAACA;QACHA,MAAMA,CAACA,GAAGA,CAACA;IACfA,CAACA;IAEDL,mCAAQA,GAARA;QACIM,MAAMA,CAACA,OAAOA,CAACA,OAAOA,CAACA;YACnBA,QAAQA,EAAEA,CAACA;SACdA,CAACA,CAACA;IACPA,CAACA;IAEDN,0CAAeA,GAAfA,UAAgBA,SAAiBA,EAAEA,QAAgBA;QAAnDO,iBAGCA;QAFGA,MAAMA,CAACA,IAAIA,CAACA,oBAAoBA,CAACA,SAASA,CAACA;aACtCA,IAAIA,CAACA,UAAAA,CAACA,IAAIA,OAAAA,KAAIA,CAACA,gBAAgBA,CAACA,CAACA,EAAEA,CAACA,EAAEA,SAASA,EAAEA,QAAQA,CAACA,EAAhDA,CAAgDA,CAACA,CAACA;IACrEA,CAACA;IAMOP,+CAAoBA,GAA5BA,UAA6BA,SAAiBA;QAC1CQ,IAAIA,MAAMA,GAAGA,IAAIA,CAACA,aAAaA,CAACA,oBAAoBA,CAACA,SAASA,CAACA,CAACA;QAChEA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA;YACRA,MAAMA,GAAGA,IAAIA,CAACA,aAAaA,CAACA,SAASA,CAACA,IAAIA,MAAMA,CAACA,IAAIA,EAAEA,SAASA,EAAEA,IAAIA,EAAEA,IAAIA,CAACA,oBAAoBA,CAACA,CAACA,CAACA;QACxGA,MAAMA,CAACA,OAAOA,CAACA,OAAOA,CAACA,MAAMA,CAACA,CAACA;IACnCA,CAACA;IAEOR,2CAAgBA,GAAxBA,UAAyBA,SAAiBA,EAAEA,MAAcA,EAAEA,SAAiBA,EAAEA,QAAgBA;QAC3FS,IAAIA,MAAMA,GAAGA,IAAIA,CAACA,aAAaA,CAACA,oBAAoBA,CAACA,SAASA,CAACA,CAACA;QAChEA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA;YACRA,MAAMA,GAAGA,IAAIA,CAACA,aAAaA,CAACA,SAASA,CAACA,IAAIA,MAAMA,CAACA,SAASA,EAAEA,SAASA,EAAEA,QAAQA,CAACA,CAACA,CAACA;QAEtFA,MAAMA,CAACA,IAAIA,OAAOA,CAACA,UAACA,OAAOA,EAAEA,MAAMA;YAC/BA,MAAMA,CAACA,SAASA,CAACA,MAAMA,EAAEA,UAACA,GAAGA,EAAEA,SAASA;gBACpCA,EAAEA,CAACA,CAACA,GAAGA,CAACA;oBACJA,MAAMA,CAACA,MAAMA,CAACA,KAAKA,CAACA,iCAAiCA,EAAEA,SAASA,CAACA,CAACA,CAACA;gBAEvEA,MAAMA,CAACA,IAAIA,CAACA,oCAAoCA,EAAEA,SAASA,CAACA,CAACA;gBAC7DA,OAAOA,CAACA;oBACJA,SAASA,EAAEA,SAASA;oBACpBA,SAASA,EAAEA,SAASA;iBACvBA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;QACPA,CAACA,CAACA,CAACA;IAEPA,CAACA;IACLT,uBAACA;AAADA,CAjFA,AAiFCA,IAAA;AAED,iBAAS,gBAAgB,CAAA","file":"server/KurentoHubServer.js","sourcesContent":["/// <reference path=\"Protocol/RpcResponses.d.ts\" />\r\n\r\nimport logger = require('./Logger');\r\nimport autobahn = require('autobahn');\r\nimport KurentoHubRpcNames = require('./KurentoHubRpcNames');\r\nimport ConnectionState = require('./ConnectionState');\r\nimport CrossbarConfig = require('./CrossbarConfig');\r\nimport WampWebTransportConfiguration = require('./Wamp/Transport/WampWebTransportConfiguration');\r\nimport WampRouterConnectionManager = require('./WampRouterConnectionManager');\r\nimport WampCredentials = require('./WampCredentials');\r\nimport WampCraCredentials = require('./WampCraCredentials');\r\n\r\n\r\nimport MasterManager = require('./MasterManager');\r\nimport Master = require('./Master');\r\nimport ViewerManager = require('./ViewerManager');\r\nimport IdCounter = require('./IdCounter');\r\nvar KurentoClient: Kurento.Client.IKurentoClientConstructor = require('kurento-client');\r\nimport KurentoClientManager = require('./KurentoClientManager');\r\n\r\n\r\nclass KurentoHubServer {\r\n\r\n    private connectionManager: WampRouterConnectionManager;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    start(): Promise<void> {\r\n        return new CrossbarConfig()\r\n            .getKurentoHubUrl()\r\n            .then(url => this.connectionManager = new WampRouterConnectionManager(url, 'AquaMedKurentoInteraction', new WampCraCredentials('KurentoHub', 'secret2'), logger))\r\n            .then(m => m.start())\r\n            .then(s => this.registerRpcs(s))\r\n            .then(registrations => {\r\n                debugger;\r\n            });\r\n    }\r\n\r\n    stop(): Promise<void> {\r\n        return this.connectionManager.stop();\r\n    }\r\n\r\n    public get state(): ConnectionState {\r\n        return this.connectionManager.state;\r\n    }\r\n\r\n    private registerRpcs(session: autobahn.Session): Promise<autobahn.IRegistration[]> {\r\n        var res = Promise.all([\r\n            session.register(KurentoHubRpcNames.register, (args, kwargs) => this.register()),\r\n            session.register(KurentoHubRpcNames.connectToStream, (args, kwargs) => this.connectToStream(args[0], args[1]))\r\n        ]);\r\n        res.then(registrations =>\r\n            registrations.forEach(r => logger.debug('KurentoHubServer RPC registered: ' + r.procedure)));\r\n        res.catch(err => {\r\n            logger.error('KurentoHubServer Failed to register RPCs.', err);\r\n            Promise.reject(err);\r\n        });\r\n        return res;\r\n    }\r\n\r\n    register(): Promise<Protocol.IRegisterResponse> {\r\n        return Promise.resolve({\r\n            clientId: 1\r\n        });\r\n    }\r\n\r\n    connectToStream(streamUrl: string, sdpOffer: string): Promise<Protocol.IConnectToStreamResponse> {\r\n        return this.addMasterIfNotExists(streamUrl)\r\n            .then(m => this.processAddViewer(1, m, streamUrl, sdpOffer));\r\n    }\r\n\r\n    private masterManager: MasterManager = new MasterManager();\r\n    private viewerManager: ViewerManager = new ViewerManager();\r\n    private kurentoClientManager = new KurentoClientManager(KurentoClient);\r\n\r\n    private addMasterIfNotExists(streamUrl: string): Promise<Master> {\r\n        var master = this.masterManager.getMasterByStreamUrl(streamUrl);\r\n        if (!master)\r\n            master = this.masterManager.addMaster(new Master(null, streamUrl, null, this.kurentoClientManager));\r\n        return Promise.resolve(master);\r\n    }\r\n\r\n    private processAddViewer(sessionId: number, master: Master, streamUrl: string, sdpOffer: string): Promise<Protocol.IConnectToStreamResponse> {\r\n        var viewer = this.viewerManager.getViewerBySessionId(sessionId);\r\n        if (!viewer)\r\n            viewer = this.viewerManager.addViewer(new Viewer(sessionId, streamUrl, sdpOffer));\r\n\r\n        return new Promise((resolve, reject) => {\r\n            master.addViewer(viewer, (err, sdpAnswer) => {\r\n                if (err)\r\n                    reject(logger.error('Failed to add Viewer to Master.', sdpAnswer));\r\n\r\n                logger.info('Added Viewer to Master. SdpAnswer:', sdpAnswer);\r\n                resolve({\r\n                    streamUrl: streamUrl,\r\n                    sdpAnswer: sdpAnswer\r\n                });\r\n            });\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport = KurentoHubServer"],"sourceRoot":"/source/"}