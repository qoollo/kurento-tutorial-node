{"version":3,"sources":["server/server.ts"],"names":["nextUniqueId","addMasterIfNotExists","processAddViewer","removeReceiver","removeSender","stop","RpcResponse","RpcResponse.constructor","RpcSuccessResponse","RpcSuccessResponse.constructor","RpcErrorResponse","RpcErrorResponse.constructor","RpcResponseStatus"],"mappings":"AAAA;;;;;;;;;;;;;GAaG;;;;;;AAKH,IAAO,OAAO,WAAW,SAAS,CAAC,CAAC;AACpC,IAAO,EAAE,WAAW,IAAI,CAAC,CAAC;AAC1B,IAAO,QAAQ,WAAW,UAAU,CAAC,CAAC;AACtC,IAAO,GAAG,WAAW,KAAK,CAAC,CAAC;AAC5B,IAAO,QAAQ,WAAW,UAAU,CAAC,CAAC;AACtC,IAAI,aAAa,GAA6C,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACxF,IAAI,YAAY,GAAgC,OAAO,CAAC,eAAe,CAAC,CAAC;AAGzE,IAAO,MAAM,WAAW,UAAU,CAAC,CAAC;AACpC,IAAO,gBAAgB,WAAW,oBAAoB,CAAC,CAAC;AAExD,IAAO,aAAa,WAAW,iBAAiB,CAAC,CAAC;AAClD,IAAO,MAAM,WAAW,UAAU,CAAC,CAAC;AACpC,IAAO,aAAa,WAAW,iBAAiB,CAAC,CAAC;AAClD,IAAO,SAAS,WAAW,aAAa,CAAC,CAAC;AAC1C,IAAO,oBAAoB,WAAW,wBAAwB,CAAC,CAAC;AAEhE,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACrC;IACI,OAAO,EACP;QACI,MAAM,EAAE,wBAAwB;QAChC,MAAM,EAAE,8BAA8B;KACzC;CACJ,CAAC,CAAC;AAEP,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;AACnC,QAAQ,CAAC;AAET,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;AACpB,IAAI,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC;AAC9C,gBAAgB,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;IAC1B,QAAQ,CAAC;AACb,CAAC,CAAC,CAAC;AAEH,gCAAgC;AAChC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;IAC9B,IAAI,EAAE,GAAG,QAAQ,CAAC,eAAe,CAAC;QAC9B,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,MAAM,EAAE,OAAO,CAAC,MAAM;KACzB,CAAC,CAAC;IAEH,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,cAAM,OAAA,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAtB,CAAsB,CAAC,CAAC;AAClD,CAAC;AAED,wBAAwB;AACxB,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE;IACjB,MAAM,CAAC,IAAI,CAAC,uDAAuD,CAAC,CAAC;IAErE,gBAAgB,CAAC,IAAI,EAAE;SAClB,IAAI,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;QAClD,OAAO,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC,EAAE;QACC,MAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;QACjD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC;AAEH;;GAEG;AAEH,IAAI,SAAS,GAAG,CAAC,CAAC;AAClB,IAAI,MAAM,GAAmE,IAAI,CAAC;AAClF,IAAI,aAAa,GAAG,IAAI,aAAa,EAAE,EACnC,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;AACxC,IAAI,oBAAoB,GAAG,IAAI,oBAAoB,CAAC,aAAa,CAAC,CAAC;AACnE,IAAI,QAAQ,GAAkC,IAAI,CAAC;AACnD,IAAI,OAAO,GAAG,EAAE,CAAC;AACjB,IAAI,MAAM,GAAkC,IAAI,CAAC;AAEjD;IACIA,SAASA,EAAEA,CAACA;IACZA,MAAMA,CAACA,SAASA,CAACA,QAAQA,EAAEA,CAACA;AAChCA,CAACA;AAED;;GAEG;AAEH,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AACtC,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AACtB,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;IAC1B,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;IACxC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,gCAAgC,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;AAErC,IAAI,aAAa,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC;IAC9B,MAAM,EAAE,MAAM;IACd,IAAI,EAAE,UAAU;CACnB,EAAE;IAAC,cAAc;SAAd,WAAc,CAAd,sBAAc,CAAd,IAAc;QAAd,6BAAc;;IAAO,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAAC,CAAC,CAAC,CAAC;AAC1D,IAAI,uBAAuB,GAAG,IAAI,SAAS,EAAE,CAAC;AAE9C,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE;IAEvC,IAAI,SAAS,GAAG,uBAAuB,CAAC,YAAY,CAAC;IAErD,MAAM,CAAC,IAAI,CAAC,+CAA+C,GAAG,SAAS,CAAC,CAAC;IAEzE,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,KAAK;QAC1B,MAAM,CAAC,IAAI,CAAC,gDAAgD,GAAG,SAAS,EAAE,KAAK,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE;QACX,MAAM,CAAC,IAAI,CAAC,sBAAsB,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,UAAU,QAAQ;QAC/B,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAC9B,QAAQ,CAAC;QACb,MAAM,CAAC,IAAI,CAAC,sBAAsB,GAAG,SAAS,GAAG,oBAAoB,EAAE,OAAO,CAAC,CAAC;QAEhF,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;YAClB,KAAK,WAAW;gBACZ,MAAM,CAAC,IAAI,CAAC,wCAAwC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;gBACtE,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;oBAC3B,QAAQ,GAAG,oBAAoB,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC9D,IAAI;oBACA,QAAQ,GAAG,IAAI,gBAAgB,CAAC,oCAAoC,EAAE,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACpG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClC,KAAK,CAAC;YACV,KAAK,WAAW;gBACZ,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAA1B,CAA0B,CAAC,CAAC;gBAChH,KAAK,CAAC;YAEV;gBACI,QAAQ,GAAG,IAAI,gBAAgB,CAAC,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,CAAA;gBAC7D,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClC,KAAK,CAAC;QACd,CAAC;IAEL,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,8BAA8B,SAAiB;IAC3CC,IAAIA,MAAMA,GAAGA,aAAaA,CAACA,oBAAoBA,CAACA,SAASA,CAACA,CAACA;IAC3DA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA;QACRA,MAAMA,GAAGA,aAAaA,CAACA,SAASA,CAACA,IAAIA,MAAMA,CAACA,IAAIA,EAAEA,SAASA,EAAEA,IAAIA,EAAEA,oBAAoBA,CAACA,CAACA,CAACA;IAC9FA,MAAMA,CAACA,IAAIA,kBAAkBA,CAACA,oCAAoCA,EAAEA,MAAMA,CAACA,EAAEA,CAACA,CAACA;AACnFA,CAACA;AAED,0BAA0B,SAAiB,EAAE,SAAiB,EAAE,QAAgB,EAAE,QAAkC;IAChHC,IAAIA,MAAMA,GAAGA,aAAaA,CAACA,oBAAoBA,CAACA,SAASA,CAACA,EACtDA,MAAMA,GAAGA,aAAaA,CAACA,oBAAoBA,CAACA,SAASA,CAACA,EACtDA,GAAgBA,CAACA;IACrBA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA;QACRA,QAAQA,CAACA,IAAIA,gBAAgBA,CAACA,8EAA8EA,EAAEA,SAASA,CAACA,CAACA,CAACA;IAC9HA,IAAIA,CAACA,CAACA;QACFA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA;YACRA,MAAMA,GAAGA,aAAaA,CAACA,SAASA,CAACA,IAAIA,MAAMA,CAACA,SAASA,EAAEA,SAASA,EAAEA,QAAQA,CAACA,CAACA,CAACA;QAEjFA,MAAMA,CAACA,SAASA,CAACA,MAAMA,EAAEA,UAACA,GAAGA,EAAEA,SAASA;YACpCA,EAAEA,CAACA,CAACA,GAAGA,CAACA;gBACJA,MAAMA,CAACA,MAAMA,CAACA,KAAKA,CAACA,iCAAiCA,EAAEA,SAASA,CAACA,CAACA;YACtEA,MAAMA,CAACA,IAAIA,CAACA,oCAAoCA,EAAEA,SAASA,CAACA,CAACA;YAC7DA,QAAQA,CAACA,IAAIA,kBAAkBA,CAACA,uCAAuCA,EAAEA,EAAEA,GAAGA,EAAEA,mBAAmBA,EAAEA,SAASA,EAAEA,SAASA,EAAEA,SAASA,EAAEA,SAASA,EAAEA,CAACA,CAACA,CAACA;QACxJA,CAACA,CAACA,CAACA;IAEPA,CAACA;AACLA,CAACA;AAED;;GAEG;AAGH,IAAI,MAAM,EACN,SAAS,GAAG,EAAE,CAAC;AACnB,wBAAwB,EAAE;IACtBC,EAAEA,CAACA,CAACA,CAACA,SAASA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;QACjBA,MAAMA,CAACA;IACXA,CAACA;IACDA,IAAIA,QAAQA,GAAGA,SAASA,CAACA,EAAEA,CAACA,CAACA;IAC7BA,QAAQA,CAACA,cAAcA,CAACA,OAAOA,EAAEA,CAACA;IAClCA,OAAOA,QAAQA,CAACA,EAAEA,CAACA,CAACA;AACxBA,CAACA;AAED;IACIC,EAAEA,CAACA,CAACA,MAAMA,KAAKA,IAAIA,CAACA,CAACA,CAACA;QAClBA,MAAMA,CAACA;IACXA,CAACA;IAEDA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,IAAIA,SAASA,CAACA,CAACA,CAACA;QACvBA,cAAcA,CAACA,EAAEA,CAACA,CAACA;IACvBA,CAACA;IAEDA,MAAMA,CAACA,cAAcA,CAACA,OAAOA,EAAEA,CAACA;IAChCA,MAAMA,GAAGA,IAAIA,CAACA;AAClBA,CAACA;AAED,cAAc,EAAU,EAAE,EAAa;IACnCC,EAAEA,CAACA,CAACA,MAAMA,KAAKA,IAAIA,IAAIA,MAAMA,CAACA,EAAEA,IAAIA,EAAEA,CAACA,CAACA,CAACA;QACrCA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,IAAIA,OAAOA,CAACA,CAACA,CAACA;YACrBA,IAAIA,MAAMA,GAAGA,OAAOA,CAACA,EAAEA,CAACA,CAACA;YACzBA,EAAEA,CAACA,CAACA,MAAMA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBACZA,MAAMA,CAACA,EAAEA,CAACA,IAAIA,CAACA,IAAIA,CAACA,SAASA,CAACA;oBAC1BA,EAAEA,EAAEA,mBAAmBA;iBAC1BA,CAACA,CAACA,CAACA;YACRA,CAACA;QACLA,CAACA;QACDA,OAAOA,GAAGA,EAAEA,CAACA;QACbA,QAAQA,CAACA,OAAOA,EAAEA,CAACA;QACnBA,QAAQA,GAAGA,IAAIA,CAACA;QAChBA,MAAMA,GAAGA,IAAIA,CAACA;IAClBA,CAACA;IAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,OAAOA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;QACrBA,IAAIA,MAAMA,GAAGA,OAAOA,CAACA,EAAEA,CAACA,CAACA;QACzBA,EAAEA,CAACA,CAACA,MAAMA,CAACA,cAAcA,CAACA;YACtBA,MAAMA,CAACA,cAAcA,CAACA,OAAOA,EAAEA,CAACA;QACpCA,OAAOA,OAAOA,CAACA,EAAEA,CAACA,CAACA;IACvBA,CAACA;AACLA,CAACA;AAED,UAAU;AAIV;IAEIC,qBAAmBA,MAAcA,EAASA,OAAOA,EAASA,IAAKA;QAA5CC,WAAMA,GAANA,MAAMA,CAAQA;QAASA,YAAOA,GAAPA,OAAOA,CAAAA;QAASA,SAAIA,GAAJA,IAAIA,CAACA;QAC3DA,IAAIA,CAACA,MAAMA,GAAGA,MAAMA,CAACA;QACrBA,IAAIA,CAACA,OAAOA,GAAGA,OAAOA,CAACA;QACvBA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA;IACrBA,CAACA;IACLD,kBAACA;AAADA,CAPA,AAOCA,IAAA;AAED;IAAiCE,sCAAWA;IACxCA,4BAAYA,OAAOA,EAAEA,IAAIA;QACrBC,kBAAMA,iBAAiBA,CAACA,iBAAiBA,CAACA,OAAOA,CAACA,EAAEA,OAAOA,EAAEA,IAAIA,CAACA,CAACA;IACvEA,CAACA;IACLD,yBAACA;AAADA,CAJA,AAICA,EAJgC,WAAW,EAI3C;AAED;IAA+BE,oCAAWA;IACtCA,0BAAYA,OAAOA,EAAEA,IAAIA;QACrBC,kBAAMA,iBAAiBA,CAACA,iBAAiBA,CAACA,KAAKA,CAACA,EAAEA,OAAOA,EAAEA,IAAIA,CAACA,CAACA;IACrEA,CAACA;IACLD,uBAACA;AAADA,CAJA,AAICA,EAJ8B,WAAW,EAIzC;AAGD,IAAK,iBAGJ;AAHD,WAAK,iBAAiB;IAClBE,+DAAOA,CAAAA;IACPA,2DAAKA,CAAAA;AACTA,CAACA,EAHI,iBAAiB,KAAjB,iBAAiB,QAGrB;AAED,0DAA0D","file":"server/server.js","sourcesContent":["/* \r\n * (C) Copyright 2014 Kurento (http://kurento.org/)\r\n *\r\n * All rights reserved. This program and the accompanying materials\r\n * are made available under the terms of the GNU Lesser General Public License\r\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\r\n * http://www.gnu.org/licenses/lgpl-2.1.html\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport ChildProcess = require('child_process');\r\nimport path = require('path');\r\nimport fs = require('fs');\r\nimport express = require('express');\r\nimport ws = require('ws');\r\nimport minimist = require('minimist');\r\nimport url = require('url');\r\nimport readline = require('readline');\r\nvar KurentoClient: Kurento.Client.IKurentoClientConstructor = require('kurento-client');\r\nvar kurentoUtils: Kurento.Utils.IKurentoUtils = require('kurento-utils');\r\n\r\nimport cfg = require('./AppConfig');\r\nimport logger = require('./Logger');\r\nimport KurentoHubServer = require('./KurentoHubServer');\r\n\r\nimport MasterManager = require('./MasterManager');\r\nimport Master = require('./Master');\r\nimport ViewerManager = require('./ViewerManager');\r\nimport IdCounter = require('./IdCounter');\r\nimport KurentoClientManager = require('./KurentoClientManager');\r\n\r\nvar argv = minimist(process.argv.slice(2),\r\n    {\r\n        default:\r\n        {\r\n            as_uri: \"http://localhost:8081/\",\r\n            ws_uri: \"ws://10.5.6.119:8888/kurento\"\r\n        }\r\n    });\r\n\r\nlogger.info('KurentoHub started.');\r\ndebugger;\r\n\r\nvar app = express();\r\nvar kurentoHubServer = new KurentoHubServer();\r\nkurentoHubServer.start().then(() => {\r\n    debugger;\r\n});\r\n\r\n//  Windows handler for Ctrl + C\r\nif (process.platform == 'win32') {\r\n    var rl = readline.createInterface({\r\n        input: process.stdin,\r\n        output: process.stdout\r\n    });\r\n\r\n    rl.on('SIGINT', () => process.emit('SIGINT'));\r\n}\r\n\r\n//  Handler for Ctrl + C\r\nprocess.on('SIGINT', () => {\r\n    logger.info(\"Caught interrupt signal. Stopping KurentoHubServer...\");\r\n\r\n    kurentoHubServer.stop()\r\n        .then(() => {\r\n            logger.info('KurentoHubServer stopped. Goodbye!');\r\n            process.exit();\r\n        }, () => {\r\n            logger.error('Failed to stop KurentoHubServer.');\r\n            process.exit(1);\r\n        });\r\n});\r\n\r\n/*\r\n * Definition of global variables.\r\n */\r\n\r\nvar idCounter = 0;\r\nvar master: { id: string, webRtcEndpoint: Kurento.Client.IWebRtcEndpoint } = null;\r\nvar masterManager = new MasterManager(),\r\n    viewerManager = new ViewerManager();\r\nvar kurentoClientManager = new KurentoClientManager(KurentoClient);\r\nvar pipeline: Kurento.Client.IMediaPipeline = null;\r\nvar viewers = {};\r\nvar client: Kurento.Client.IKurentoClient = null;\r\n\r\nfunction nextUniqueId() {\r\n    idCounter++;\r\n    return idCounter.toString();\r\n}\r\n\r\n/*\r\n * Server startup\r\n */\r\n\r\nvar asUrl = url.parse(argv['as_uri']);\r\nvar port = asUrl.port;\r\nvar server = app.listen(port, function () {\r\n    logger.info('Kurento Tutorial started');\r\n    logger.info('Open ' + url.format(asUrl) + ' with a WebRTC capable browser');\r\n});\r\n\r\nlogger.info('Starting WebSocket...');\r\n\r\nvar wssForControl = new ws.Server({\r\n    server: server,\r\n    path: '/control'\r\n}, (...args: any[]) => { logger.info('control', args); });\r\nvar controlSessionIdCounter = new IdCounter();\r\n\r\nwssForControl.on('connection', function (ws) {\r\n\r\n    var sessionId = controlSessionIdCounter.nextUniqueId;\r\n\r\n    logger.info('Connection for control received. Session id: ' + sessionId);\r\n\r\n    ws.on('error', function (error) {\r\n        logger.info('There was an error in the control-connection №' + sessionId, error);\r\n    });\r\n\r\n    ws.on('close', function () {\r\n        logger.info('Control-connection #' + sessionId + ' closed');\r\n    });\r\n\r\n    ws.on('message', function (_message) {\r\n        var message = JSON.parse(_message),\r\n            response;\r\n        logger.info('Control-connection #' + sessionId + ' received message:', message);\r\n\r\n        switch (message.rpc) {\r\n            case 'AddMaster':\r\n                logger.info('\"AddMaster\" command called with params', message.params);\r\n                if (!!message.params.streamUrl)\r\n                    response = addMasterIfNotExists(message.params.streamUrl);\r\n                else\r\n                    response = new RpcErrorResponse('Message doesn`t contain camera URL', message.params.streamUrl);\r\n                ws.send(JSON.stringify(response));\r\n                break;\r\n            case 'AddViewer':\r\n                processAddViewer(sessionId, message.params.streamUrl, message.params.sdpOffer, r => ws.send(JSON.stringify(r)));\r\n                break;\r\n\r\n            default:\r\n                response = new RpcErrorResponse('Unknown RPC: ', message.rpc)\r\n                ws.send(JSON.stringify(response));\r\n                break;\r\n        }\r\n\r\n    });\r\n\r\n});\r\n\r\nfunction addMasterIfNotExists(streamUrl: string): RpcResponse {\r\n    var master = masterManager.getMasterByStreamUrl(streamUrl);\r\n    if (!master)\r\n        master = masterManager.addMaster(new Master(null, streamUrl, null, kurentoClientManager));\r\n    return new RpcSuccessResponse('Master has been successfully added', master.id);\r\n}\r\n\r\nfunction processAddViewer(sessionId: number, streamUrl: string, sdpOffer: string, callback: (r: RpcResponse) => void): void {\r\n    var viewer = viewerManager.getViewerBySessionId(sessionId),\r\n        master = masterManager.getMasterByStreamUrl(streamUrl),\r\n        res: RpcResponse;\r\n    if (!master)\r\n        callback(new RpcErrorResponse('Master for specified StreamUrl is not created yet. Call AddMaster RPC first.', streamUrl));\r\n    else {\r\n        if (!viewer)\r\n            viewer = viewerManager.addViewer(new Viewer(sessionId, streamUrl, sdpOffer));\r\n\r\n        master.addViewer(viewer, (err, sdpAnswer) => {\r\n            if (err)\r\n                return logger.error('Failed to add Viewer to Master.', sdpAnswer);\r\n            logger.info('Added Viewer to Master. SdpAnswer:', sdpAnswer);\r\n            callback(new RpcSuccessResponse('Great success! Viewer added to Master', { rpc: 'AddViewerResponse', streamUrl: streamUrl, sdpAnswer: sdpAnswer }));\r\n        });\r\n\r\n    }\r\n}\r\n\r\n/*\r\n * Definition of functions\r\n */\r\n\r\n\r\nvar sender,\r\n    receivers = [];\r\nfunction removeReceiver(id) {\r\n    if (!receivers[id]) {\r\n        return;\r\n    }\r\n    var receiver = receivers[id];\r\n    receiver.webRtcEndpoint.release();\r\n    delete receiver[id];\r\n}\r\n\r\nfunction removeSender() {\r\n    if (sender === null) {\r\n        return;\r\n    }\r\n\r\n    for (var ix in receivers) {\r\n        removeReceiver(ix);\r\n    }\r\n\r\n    sender.webRtcEndpoint.release();\r\n    sender = null;\r\n}\r\n\r\nfunction stop(id: string, ws: WebSocket): void {\r\n    if (master !== null && master.id == id) {\r\n        for (var ix in viewers) {\r\n            var viewer = viewers[ix];\r\n            if (viewer.ws) {\r\n                viewer.ws.send(JSON.stringify({\r\n                    id: 'stopCommunication'\r\n                }));\r\n            }\r\n        }\r\n        viewers = {};\r\n        pipeline.release();\r\n        pipeline = null;\r\n        master = null;\r\n    } else if (viewers[id]) {\r\n        var viewer = viewers[id];\r\n        if (viewer.webRtcEndpoint)\r\n            viewer.webRtcEndpoint.release();\r\n        delete viewers[id];\r\n    }\r\n}\r\n\r\n//Classes:\r\n\r\n\r\n\r\nclass RpcResponse {\r\n\r\n    constructor(public status: string, public message, public data?) {\r\n        this.status = status;\r\n        this.message = message;\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nclass RpcSuccessResponse extends RpcResponse {\r\n    constructor(message, data) {\r\n        super(RpcResponseStatus[RpcResponseStatus.Success], message, data);\r\n    }\r\n}\r\n\r\nclass RpcErrorResponse extends RpcResponse {\r\n    constructor(message, data) {\r\n        super(RpcResponseStatus[RpcResponseStatus.Error], message, data);\r\n    }\r\n}\r\n\r\n\r\nenum RpcResponseStatus {\r\n    Success,\r\n    Error\r\n}\r\n\r\n//app.use(express.static(path.join(__dirname, 'static')));\r\n"],"sourceRoot":"../"}