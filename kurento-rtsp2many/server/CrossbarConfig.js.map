{"version":3,"sources":["server/CrossbarConfig.ts"],"names":["CrossbarConfig","CrossbarConfig.constructor","CrossbarConfig.read","CrossbarConfig.readSync","CrossbarConfig.getKurentoHubUrl","CrossbarConfig.getConfigFilePath","CrossbarConfig.parseConfigFile"],"mappings":"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","file":"server/CrossbarConfig.js","sourcesContent":["\r\nimport fs = require('fs');\r\nimport path = require('path');\r\nimport logger = require('./Logger');\r\nimport WampWebTransportConfiguration = require('./Wamp/Transport/WampWebTransportConfiguration');\r\n\r\nclass CrossbarConfig {\r\n\r\n    public read(): Promise<crossbar.config.ICrossbarConfig> {\r\n        return new Promise((resolve, reject) => {\r\n            var path = this.getConfigFilePath();\r\n            fs.readFile(path, 'utf8', (err, content) => {\r\n                if (err)\r\n                    return reject(err);\r\n                resolve(this.parseConfigFile(content));\r\n            });\r\n        }); \r\n    }\r\n\r\n    public readSync(): crossbar.config.ICrossbarConfig {\r\n        var path = this.getConfigFilePath(),\r\n            content = fs.readFileSync(path, 'utf8'),\r\n            json = this.parseConfigFile(content);\r\n        return json;\r\n    }\r\n\r\n    public getKurentoHubUrl(): Promise<string> {\r\n        return this.read()\r\n            .then(cfg => {\r\n                var config = new WampWebTransportConfiguration(<crossbar.config.IWebTransport>(<crossbar.config.ICrossbarRouter>cfg.workers[0]).transports[0]);\r\n                return config.getUrl('127.0.0.1', 'kurentoHub');\r\n            });\r\n    }\r\n\r\n    private getConfigFilePath(): string {\r\n        var appRoot = path.dirname(require.main.filename),\r\n            configPath = path.join(appRoot, '..', '.crossbar', 'config.json');\r\n        if (!fs.existsSync(configPath)) {\r\n            var err = 'CrossbarConfig.getConfigFilePath() failed to locate Crossbar.io configuration file. Searched location: ' + configPath;\r\n            logger.error(err);\r\n            throw new Error(err)\r\n        }\r\n        return configPath;\r\n    }\r\n\r\n    private parseConfigFile(content: string): crossbar.config.ICrossbarConfig {\r\n        try {\r\n            return JSON.parse(content);\r\n        } catch (e) {\r\n            logger.error('CrossbarConfig.parseConfigFile() failed to parse Crossbar.io configuration file.', e);\r\n            throw e; \r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport = CrossbarConfig;"],"sourceRoot":"/source/"}