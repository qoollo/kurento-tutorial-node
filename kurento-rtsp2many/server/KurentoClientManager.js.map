{"version":3,"sources":["server/KurentoClientManager.ts"],"names":["KurentoClientManager","KurentoClientManager.constructor","KurentoClientManager.addClient","KurentoClientManager.findOrCreateClient","KurentoClientManager.getClientById","KurentoClientManager.findAvailableClient","KurentoClientManager.removeClientById","KurentoClientWrapper","KurentoClientWrapper.constructor","KurentoClientWrapper.id","KurentoClientWrapper.uri","KurentoClientWrapper.client"],"mappings":"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","file":"server/KurentoClientManager.js","sourcesContent":["import IdCounter = require('./IdCounter');\r\n\r\nclass KurentoClientManager {\r\n\r\n    constructor(private kurentoClient: Kurento.Client.IKurentoClientConstructor) {\r\n\r\n    }\r\n\r\n    private wsUri: string = 'ws://10.5.6.119:8888/kurento';\r\n\r\n    private clientCounter = new IdCounter();\r\n\r\n    private clients: KurentoClientWrapper[] = []\r\n\r\n    addClient(wsUri: string, callback: (err, client?: KurentoClientWrapper) => void) {\r\n        var existingClient = this.clients.filter(c => c.uri === wsUri)[0];\r\n\r\n        if (existingClient)\r\n            callback('The client with the specified Uri already exists');\r\n        else {\r\n            console.log('Connecting to Kurento Media Server at', wsUri);\r\n            new this.kurentoClient(wsUri, (error, kurentoClient: Kurento.Client.IKurentoClient) => {\r\n                if (error)\r\n                    return callback(error)\r\n\r\n                var innerKurrentoClient = new KurentoClientWrapper(this.clientCounter.nextUniqueId, wsUri, kurentoClient);\r\n                this.clients.push(innerKurrentoClient);\r\n                callback(null, innerKurrentoClient);\r\n            });\r\n        }\r\n    }\r\n\r\n    findOrCreateClient(callback: (err, client?: KurentoClientWrapper) => void): void {\r\n        var client = this.clients.filter(c => c.uri == this.wsUri)[0];\r\n        if (client)\r\n            return callback(client);\r\n        this.addClient(this.wsUri, callback);\r\n    }\r\n\r\n    getClientById(id: number): KurentoClientWrapper {\r\n        return this.clients.filter(c => c.id === id)[0];\r\n    }\r\n\r\n    findAvailableClient() {\r\n        return this.clients.sort((a, b) => a.connectionCounter.getConnectionCount() - b.connectionCounter.getConnectionCount())[0];\r\n    }\r\n\r\n    removeClientById(id: number) {\r\n        var client = this.getClientById(id),\r\n            index = this.clients.indexOf(client);\r\n        if (index !== -1)\r\n            this.clients.splice(index, 1);\r\n    }\r\n}\r\n\r\nclass KurentoClientWrapper {\r\n\r\n    constructor(id: number, uri: string, client: Kurento.Client.IKurentoClient) {\r\n        this._id = id;\r\n        this._uri = uri;\r\n        this._client = client;\r\n    }\r\n\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n    private _id: number;\r\n\r\n    get uri(): string {\r\n        return this._uri;\r\n    }\r\n    private _uri: string;\r\n\r\n    get client(): Kurento.Client.IKurentoClient {\r\n        return this._client;\r\n    }\r\n    private _client: Kurento.Client.IKurentoClient;\r\n\r\n    //  It means connection from current app:\r\n    private masterConnectionCount = 0;\r\n\r\n    private viewerConnectionCount = 0;\r\n\r\n    connectionCounter = {\r\n        processMasterConnected: () => this.masterConnectionCount++,\r\n        processMasterDisconnected: () => this.masterConnectionCount--,\r\n        processVieverConnected: () => this.viewerConnectionCount++,\r\n        processVieverDisconected: () => this.viewerConnectionCount--,\r\n        getConnectionCount: () => (this.masterConnectionCount + this.viewerConnectionCount)\r\n    }\r\n\r\n}\r\n\r\nexport = KurentoClientManager;\r\n\r\n\r\n"],"sourceRoot":"/source/"}