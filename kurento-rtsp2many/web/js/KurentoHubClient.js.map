{"version":3,"sources":["web/js/KurentoHubClient.ts"],"names":["KurentoHubClient","KurentoHubClient.constructor","KurentoHubClient.start","KurentoHubClient.stop"],"mappings":"AACA,IAAO,wBAAwB,WAAW,uCAAuC,CAAC,CAAC;AACnF,IAAO,2BAA2B,WAAW,0CAA0C,CAAC,CAAC;AACzF,IAAO,6BAA6B,WAAW,2DAA2D,CAAC,CAAC;AAE5G;IAIIA,0BAAYA,MAAqCA,EAAEA,gBAAwBA,EAAEA,MAAgBA;QAAhBC,sBAAgBA,GAAhBA,gBAAgBA;QACzFA,IAAIA,eAAeA,GAAGA,IAAIA,6BAA6BA,CAACA,MAAMA,CAACA,EAC3DA,GAAGA,GAAGA,eAAeA,CAACA,MAAMA,CAACA,gBAAgBA,EAAEA,YAAYA,CAACA,EAC5DA,WAAWA,GAAGA,IAAIA,wBAAwBA,CAACA,eAAeA,EAAEA,SAASA,EAAEA,SAASA,EAAEA,GAAGA,EAAEA,EAAEA,CAACA,CAACA;QAC/FA,IAAIA,CAACA,iBAAiBA,GAAGA,IAAIA,2BAA2BA,CAACA,GAAGA,EAAEA,2BAA2BA,EAAEA,WAAWA,EAAEA,MAAMA,CAACA,CAACA;IACpHA,CAACA;IAEDD,gCAAKA,GAALA;QACIE,MAAMA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,KAAKA,EAAEA;aAChCA,IAAIA,CAACA,UAAAA,CAACA;YACHA,QAAQA,CAACA;QACbA,CAACA,CAACA,CAACA;IACXA,CAACA;IAEDF,+BAAIA,GAAJA;QACIG,MAAMA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,IAAIA,EAAEA,CAACA;IACzCA,CAACA;IAELH,uBAACA;AAADA,CAtBA,AAsBCA,IAAA;AAED,iBAAS,gBAAgB,CAAC","file":"web/js/KurentoHubClient.js","sourcesContent":["\r\nimport WampCraSaltedCredentials = require('../../server/WampCraSaltedCredentials');\r\nimport WampRouterConnectionManager = require('../../server/WampRouterConnectionManager');\r\nimport WampWebTransportConfiguration = require('../../server/Wamp/Transport/WampWebTransportConfiguration');\r\n\r\nclass KurentoHubClient {\r\n\r\n    private connectionManager: WampRouterConnectionManager;\r\n\r\n    constructor(config: crossbar.config.IWebTransport, kurentoHubDomain: string, logger = console) {\r\n        var transportConfig = new WampWebTransportConfiguration(config),\r\n            url = transportConfig.getUrl(kurentoHubDomain, 'kurentoHub'),\r\n            credentials = new WampCraSaltedCredentials('VideoConsumer', 'secret1', 'salt123', 100, 16);\r\n        this.connectionManager = new WampRouterConnectionManager(url, 'AquaMedKurentoInteraction', credentials, logger);\r\n    }\r\n\r\n    start(): Promise<void> {\r\n        return this.connectionManager.start()\r\n            .then(s => {\r\n                debugger;\r\n            });\r\n    }\r\n\r\n    stop(): Promise<void> {\r\n        return this.connectionManager.stop();\r\n    }\r\n\r\n}\r\n\r\nexport = KurentoHubClient;"],"sourceRoot":"/source/"}