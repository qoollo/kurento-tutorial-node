{"version":3,"sources":["web/js/Console.ts"],"names":["ConsoleWrapper","ConsoleWrapper.constructor","ConsoleWrapper.createMessage","ConsoleWrapper.info","ConsoleWrapper.log"],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAEH;;;;;;;;;;;GAWG;AACH;IAEIA,wBAAYA,EAAEA,EAAEA,OAAOA;QAkBfC,YAAOA,GAAGA,UAAUA,OAAOA;YAC/B,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;YACnD,8CAA8C;QAClD,CAAC,CAACA;QAELA;;;;;WAKGA;QACOA,UAAKA,GAAGA,UAAUA,GAAGA;YACxB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;QACrD,CAAC,CAACA;QAELA;;;;;WAKGA;QACOA,SAAIA,GAAGA,UAAUA,GAAGA;YACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;QACrD,CAAC,CAACA;QAiBLA;;;;;WAKGA;QACOA,UAAKA,GAAGA,UAAUA,GAAGA;YACxB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACtB,+CAA+C;QACnD,CAAC,CAACA;QArEEA,IAAIA,CAACA,GAAGA,GAAGA,QAAQA,CAACA,cAAcA,CAACA,EAAEA,CAACA,CAACA;IAC3CA,CAACA;IAKOD,sCAAaA,GAArBA,UAAsBA,GAAWA,EAAEA,KAAcA;QAC7CE,qBAAqBA;QACrBA,GAAGA,GAAGA,GAAGA,CAACA,QAAQA,EAAEA,CAACA,OAAOA,CAACA,IAAIA,EAAEA,MAAMA,CAACA,CAACA;QAC3CA,IAAIA,IAAIA,GAAGA,QAAQA,CAACA,aAAaA,CAACA,MAAMA,CAACA,CAACA;QAC1CA,EAAEA,CAACA,CAACA,KAAKA,IAAIA,SAASA,CAACA,CAACA,CAACA;YACrBA,IAAIA,CAACA,KAAKA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;QAC7BA,CAACA;QACDA,IAAIA,CAACA,WAAWA,CAACA,QAAQA,CAACA,cAAcA,CAACA,GAAGA,CAACA,CAACA,CAACA;QAC/CA,MAAMA,CAACA,IAAIA,CAACA;IAChBA,CAACA;IA8BJF;;;;;OAKGA;IACOA,6BAAIA,GAAXA,UAAYA,GAAGA;QACXG,IAAIA,CAACA,OAAOA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;QACvBA,IAAIA,CAACA,OAAOA,CAACA,IAAIA,CAACA,aAAaA,CAACA,GAAGA,CAACA,CAACA,CAACA;IAC1CA,CAACA;IAEMH,4BAAGA,GAAVA,UAAWA,GAAGA;QACVI,IAAIA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;IACnBA,CAACA;;IAaLJ,qBAACA;AAADA,CA1EA,AA0ECA,IAAA;AAED,iBAAS,cAAc,CAAC","file":"web/js/Console.js","sourcesContent":["/*\r\n * (C) Copyright 2013 Kurento (http://kurento.org/)\r\n *\r\n * All rights reserved. This program and the accompanying materials\r\n * are made available under the terms of the GNU Lesser General Public License\r\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\r\n * http://www.gnu.org/licenses/lgpl-2.1.html\r\n *\r\n * This library is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\n/**\r\n * Object that piggy-back the browser console and show their messages on a DIV\r\n * \r\n * Inspired by Node.js ClIM module (https://github.com/epeli/node-clim)\r\n * \r\n * @constructor\r\n * \r\n * @param {String}\r\n *            id: id attribute of the DIV tag where to show the messages\r\n * @param console:\r\n *            reference to the original browser console\r\n */\r\nclass ConsoleWrapper {\r\n\r\n    constructor(id, console) {\r\n        this.div = document.getElementById(id);\r\n    }\r\n\r\n    private div: HTMLElement;\r\n    private console: Console;\r\n\r\n    private createMessage(msg: string, color?: string) {\r\n        // Sanitize the input\r\n        msg = msg.toString().replace(/</g, '&lt;');\r\n        var span = document.createElement('SPAN');\r\n        if (color != undefined) {\r\n            span.style.color = color;\r\n        }\r\n        span.appendChild(document.createTextNode(msg));\r\n        return span;\r\n    }\r\n\r\n    private _append = function (element) {\r\n        this.div.appendChild(element);\r\n        this.div.appendChild(document.createElement('BR'));\r\n        // $(window).scrollTo('max', {duration: 500});\r\n    };\r\n\r\n\t/**\r\n\t * Show an Error message both on browser console and on defined DIV\r\n\t * \r\n\t * @param msg:\r\n\t *            message or object to be shown\r\n\t */\r\n    public error = function (msg) {\r\n        this.console.error(msg);\r\n        this._append(this.createMessage(msg, \"#FF0000\"));\r\n    };\r\n\r\n\t/**\r\n\t * Show an Warn message both on browser console and on defined DIV\r\n\t * \r\n\t * @param msg:\r\n\t *            message or object to be shown\r\n\t */\r\n    public warn = function (msg) {\r\n        this.console.warn(msg);\r\n        this._append(this.createMessage(msg, \"#FFA500\"));\r\n    };\r\n\r\n\t/**\r\n\t * Show an Info message both on browser console and on defined DIV\r\n\t * \r\n\t * @param msg:\r\n\t *            message or object to be shown\r\n\t */\r\n    public info(msg) {\r\n        this.console.info(msg);\r\n        this._append(this.createMessage(msg));\r\n    }\r\n\r\n    public log(msg) {\r\n        this.info(msg);\r\n    };\r\n\r\n\t/**\r\n\t * Show an Debug message both on browser console and on defined DIV\r\n\t * \r\n\t * @param msg:\r\n\t *            message or object to be shown\r\n\t */\r\n    public debug = function (msg) {\r\n        this.console.log(msg);\r\n        // this._append(createMessage(msg, \"#0000FF\"));\r\n    };\r\n\r\n}\r\n\r\nexport = ConsoleWrapper;"],"sourceRoot":"../"}